
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    function isAdministrator() {
      return exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
             get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdministrator == true;
    }

    match /users/{userId} {
      allow read, write: if request.auth.uid == userId || isAdministrator();
    }

    match /roles/{roleId} {
      allow read: if request.auth != null;
      allow write: if isAdministrator();
    }

    match /apps/{appId} {
      allow read: if request.auth != null;
      allow write: if isAdministrator();
    }
    
    match /favorites/{favoriteId} {
      allow read, write: if request.auth.uid == request.resource.data.userId;
    }

    match /counters/{counterId} {
      allow read: if request.auth != null;
      allow write: if isAdministrator();
    }

    match /request_headers/{headerId} {
      allow read, write: if request.auth != null;
    }

    match /request_positions/{positionId} {
      allow read, write: if request.auth != null;
    }

    match /catalogs_admin/{catalogId} {
      allow read: if request.auth != null;
      allow write: if isAdministrator();
    }
  }
}
